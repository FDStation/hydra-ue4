// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Private/HydraPluginPrivatePCH.h"
#include "HydraPlugin.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeHydraPlugin() {}
static class UEnum* EHydraControllerButton_StaticEnum()
{
	extern HYDRAPLUGIN_API class UPackage* Z_Construct_UPackage__Script_HydraPlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern HYDRAPLUGIN_API class UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerButton();
		Singleton = GetStaticEnum(Z_Construct_UEnum_HydraPlugin_EHydraControllerButton, Z_Construct_UPackage__Script_HydraPlugin(), TEXT("EHydraControllerButton"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHydraControllerButton(EHydraControllerButton_StaticEnum, TEXT("/Script/HydraPlugin"), TEXT("EHydraControllerButton"), false, nullptr, nullptr);
static class UEnum* EHydraControllerHand_StaticEnum()
{
	extern HYDRAPLUGIN_API class UPackage* Z_Construct_UPackage__Script_HydraPlugin();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern HYDRAPLUGIN_API class UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerHand();
		Singleton = GetStaticEnum(Z_Construct_UEnum_HydraPlugin_EHydraControllerHand, Z_Construct_UPackage__Script_HydraPlugin(), TEXT("EHydraControllerHand"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHydraControllerHand(EHydraControllerHand_StaticEnum, TEXT("/Script/HydraPlugin"), TEXT("EHydraControllerHand"), false, nullptr, nullptr);
	void UHydraPluginComponent::StaticRegisterNativesUHydraPluginComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "Calibrate",(Native)&UHydraPluginComponent::execCalibrate);
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "GetHistoricalFrameForHand",(Native)&UHydraPluginComponent::execGetHistoricalFrameForHand);
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "GetLatestFrameForHand",(Native)&UHydraPluginComponent::execGetLatestFrameForHand);
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "IsAvailable",(Native)&UHydraPluginComponent::execIsAvailable);
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "SetBaseOffset",(Native)&UHydraPluginComponent::execSetBaseOffset);
		FNativeFunctionRegistrar::RegisterFunction(UHydraPluginComponent::StaticClass(), "SetMeshComponentLinks",(Native)&UHydraPluginComponent::execSetMeshComponentLinks);
	}
	IMPLEMENT_CLASS(UHydraPluginComponent, 344511876);
	void UHydraSingleController::StaticRegisterNativesUHydraSingleController()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHydraSingleController::StaticClass(), "isLeftHand",(Native)&UHydraSingleController::execisLeftHand);
		FNativeFunctionRegistrar::RegisterFunction(UHydraSingleController::StaticClass(), "isRightHand",(Native)&UHydraSingleController::execisRightHand);
	}
	IMPLEMENT_CLASS(UHydraSingleController, 2266314430);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();

	HYDRAPLUGIN_API class UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerButton();
	HYDRAPLUGIN_API class UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerHand();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraControllerMovedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraJoystickMovedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonReleasedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonPressedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraUnDockedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraDockedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraUnPluggedSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraPluggedInSignature__DelegateSignature();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_Calibrate();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_GetHistoricalFrameForHand();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_GetLatestFrameForHand();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_IsAvailable();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_SetBaseOffset();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraPluginComponent_SetMeshComponentLinks();
	HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraPluginComponent_NoRegister();
	HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraPluginComponent();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraSingleController_isLeftHand();
	HYDRAPLUGIN_API class UFunction* Z_Construct_UFunction_UHydraSingleController_isRightHand();
	HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraSingleController_NoRegister();
	HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraSingleController();
	HYDRAPLUGIN_API class UPackage* Z_Construct_UPackage__Script_HydraPlugin();
	UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerButton()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		extern uint32 Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerButton_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHydraControllerButton"), 0, Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerButton_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHydraControllerButton"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_UNKNOWN")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_B1")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_B2")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_B3")), 3));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_B4")), 4));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_START")), 5));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_JOYSTICK")), 6));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_BUMPER")), 7));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_TRIGGER")), 8));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_BUTTON_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EHydraControllerButton");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/HydraEnum.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerButton_CRC() { return 2821076568U; }
	UEnum* Z_Construct_UEnum_HydraPlugin_EHydraControllerHand()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		extern uint32 Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerHand_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EHydraControllerHand"), 0, Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerHand_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EHydraControllerHand"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, uint8>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_HAND_UNKNOWN")), 0));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_HAND_LEFT")), 1));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_HAND_RIGHT")), 2));
			EnumNames.Add(TPairInitializer<FName, uint8>(FName(TEXT("HYDRA_HAND_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EHydraControllerHand");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Private/HydraEnum.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_HydraPlugin_EHydraControllerHand_CRC() { return 1653663135U; }
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraControllerMovedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms
		{
			UHydraSingleController* controller;
			FVector position;
			FVector velocity;
			FVector acceleration;
			FRotator orientation;
			FRotator angularVelocity;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraControllerMovedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraControllerMovedSignature_Parms));
			UProperty* NewProp_angularVelocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("angularVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(angularVelocity, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_orientation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("orientation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(orientation, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_acceleration = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("acceleration"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(acceleration, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_velocity = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("velocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(velocity, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_position = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(position, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraJoystickMovedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms
		{
			UHydraSingleController* controller;
			FVector2D movement;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraJoystickMovedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms));
			UProperty* NewProp_movement = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("movement"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(movement, _Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonReleasedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms
		{
			UHydraSingleController* controller;
			TEnumAsByte<EHydraControllerButton> button;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraButtonReleasedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms));
			UProperty* NewProp_button = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("button"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(button, _Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms), 0x0010000000000080, Z_Construct_UEnum_HydraPlugin_EHydraControllerButton());
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonPressedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraButtonPressedSignature_Parms
		{
			UHydraSingleController* controller;
			TEnumAsByte<EHydraControllerButton> button;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraButtonPressedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraButtonPressedSignature_Parms));
			UProperty* NewProp_button = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("button"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(button, _Script_HydraPlugin_eventHydraButtonPressedSignature_Parms), 0x0010000000000080, Z_Construct_UEnum_HydraPlugin_EHydraControllerButton());
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraButtonPressedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraUnDockedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraUnDockedSignature_Parms
		{
			UHydraSingleController* controller;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraUnDockedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraUnDockedSignature_Parms));
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraUnDockedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraDockedSignature__DelegateSignature()
	{
		struct _Script_HydraPlugin_eventHydraDockedSignature_Parms
		{
			UHydraSingleController* controller;
		};
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraDockedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_HydraPlugin_eventHydraDockedSignature_Parms));
			UProperty* NewProp_controller = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("controller"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(controller, _Script_HydraPlugin_eventHydraDockedSignature_Parms), 0x0010000000000080, Z_Construct_UClass_UHydraSingleController_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraUnPluggedSignature__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraUnPluggedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_HydraPlugin_HydraPluggedInSignature__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_HydraPlugin();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HydraPluggedInSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("These macros cannot be multi-line or it will not compile"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_Calibrate()
	{
		struct HydraPluginComponent_eventCalibrate_Parms
		{
			FVector OffsetFromShoulderMidPoint;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Calibrate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(HydraPluginComponent_eventCalibrate_Parms));
			UProperty* NewProp_OffsetFromShoulderMidPoint = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OffsetFromShoulderMidPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(OffsetFromShoulderMidPoint, HydraPluginComponent_eventCalibrate_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HydraFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_OffsetFromShoulderMidPoint"), TEXT("0.000000,0.000000,40.000000"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Use in-built calibration. Expects either a T-Pose. If offset is provided it will add the given offset to the final calibration.\nFor T-pose the function defaults to 40cm height. At 0,0,0 this will simply calibrate the zero position"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_GetHistoricalFrameForHand()
	{
		struct HydraPluginComponent_eventGetHistoricalFrameForHand_Parms
		{
			TEnumAsByte<EHydraControllerHand> hand;
			int32 historyIndex;
			UHydraSingleController* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetHistoricalFrameForHand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraPluginComponent_eventGetHistoricalFrameForHand_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, HydraPluginComponent_eventGetHistoricalFrameForHand_Parms), 0x0010000000000580, Z_Construct_UClass_UHydraSingleController_NoRegister());
			UProperty* NewProp_historyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("historyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(historyIndex, HydraPluginComponent_eventGetHistoricalFrameForHand_Parms), 0x0010000000000080);
			UProperty* NewProp_hand = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hand"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(hand, HydraPluginComponent_eventGetHistoricalFrameForHand_Parms), 0x0010000000000080, Z_Construct_UEnum_HydraPlugin_EHydraControllerHand());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HydraFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_hand"), TEXT("HYDRA_HAND_LEFT"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_historyIndex"), TEXT("0"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("/ Poll for historical data.  Valid Hand is Left or Right, Valid history index is 0-9."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_GetLatestFrameForHand()
	{
		struct HydraPluginComponent_eventGetLatestFrameForHand_Parms
		{
			TEnumAsByte<EHydraControllerHand> hand;
			UHydraSingleController* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLatestFrameForHand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraPluginComponent_eventGetLatestFrameForHand_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, HydraPluginComponent_eventGetLatestFrameForHand_Parms), 0x0010000000000580, Z_Construct_UClass_UHydraSingleController_NoRegister());
			UProperty* NewProp_hand = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("hand"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(hand, HydraPluginComponent_eventGetLatestFrameForHand_Parms), 0x0010000000000080, Z_Construct_UEnum_HydraPlugin_EHydraControllerHand());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HydraFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_hand"), TEXT("HYDRA_HAND_LEFT"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("/ Get the latest available data given in a single frame. Valid Hand is Left or Right"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_IsAvailable()
	{
		struct HydraPluginComponent_eventIsAvailable_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsAvailable"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraPluginComponent_eventIsAvailable_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HydraPluginComponent_eventIsAvailable_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HydraPluginComponent_eventIsAvailable_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HydraPluginComponent_eventIsAvailable_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HydraFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Check if the hydra is available/plugged in."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_SetBaseOffset()
	{
		struct HydraPluginComponent_eventSetBaseOffset_Parms
		{
			FVector Offset;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetBaseOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04820401, 65535, sizeof(HydraPluginComponent_eventSetBaseOffset_Parms));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Offset, HydraPluginComponent_eventSetBaseOffset_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("HydraFunctions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set a manual offset, use this for manual calibration"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraPluginComponent_SetMeshComponentLinks()
	{
		struct HydraPluginComponent_eventSetMeshComponentLinks_Parms
		{
			UMeshComponent* LeftMesh;
			UMeshComponent* RightMesh;
		};
		UObject* Outer=Z_Construct_UClass_UHydraPluginComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetMeshComponentLinks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraPluginComponent_eventSetMeshComponentLinks_Parms));
			UProperty* NewProp_RightMesh = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("RightMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(RightMesh, HydraPluginComponent_eventSetMeshComponentLinks_Parms), 0x0010000000080080, Z_Construct_UClass_UMeshComponent_NoRegister());
			UProperty* NewProp_LeftMesh = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("LeftMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(LeftMesh, HydraPluginComponent_eventSetMeshComponentLinks_Parms), 0x0010000000080080, Z_Construct_UClass_UMeshComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Hydra Functions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Once set, HideStaticMeshWhenDocked=true property will cause the bound components to hide."));
			MetaData->SetValue(NewProp_RightMesh, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_LeftMesh, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UHydraPluginComponent_NoRegister()
	{
		return UHydraPluginComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UHydraPluginComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_HydraPlugin();
			OuterClass = UHydraPluginComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;

				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_Calibrate());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_GetHistoricalFrameForHand());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_GetLatestFrameForHand());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_IsAvailable());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_SetBaseOffset());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraPluginComponent_SetMeshComponentLinks());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(HideMeshComponentsWhenDocked, UHydraPluginComponent, bool);
				UProperty* NewProp_HideMeshComponentsWhenDocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("HideMeshComponentsWhenDocked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(HideMeshComponentsWhenDocked, UHydraPluginComponent), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(HideMeshComponentsWhenDocked, UHydraPluginComponent), sizeof(bool), true);
				UProperty* NewProp_ControllerMoved = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ControllerMoved"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ControllerMoved, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraControllerMovedSignature__DelegateSignature());
				UProperty* NewProp_JoystickMoved = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("JoystickMoved"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(JoystickMoved, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraJoystickMovedSignature__DelegateSignature());
				UProperty* NewProp_ButtonReleased = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ButtonReleased"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ButtonReleased, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonReleasedSignature__DelegateSignature());
				UProperty* NewProp_ButtonPressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ButtonPressed"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ButtonPressed, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonPressedSignature__DelegateSignature());
				UProperty* NewProp_ControllerUndocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ControllerUndocked"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ControllerUndocked, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraUnDockedSignature__DelegateSignature());
				UProperty* NewProp_ControllerDocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ControllerDocked"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(ControllerDocked, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraDockedSignature__DelegateSignature());
				UProperty* NewProp_Unplugged = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Unplugged"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(Unplugged, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraUnPluggedSignature__DelegateSignature());
				UProperty* NewProp_PluggedIn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PluggedIn"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(PluggedIn, UHydraPluginComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_HydraPlugin_HydraPluggedInSignature__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_Calibrate(), "Calibrate"); // 2575849023
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_GetHistoricalFrameForHand(), "GetHistoricalFrameForHand"); // 3167782509
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_GetLatestFrameForHand(), "GetLatestFrameForHand"); // 2905667895
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_IsAvailable(), "IsAvailable"); // 1687138331
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_SetBaseOffset(), "SetBaseOffset"); // 1119512016
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraPluginComponent_SetMeshComponentLinks(), "SetMeshComponentLinks"); // 427070324
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("Input Controller"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("ComponentReplication"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HydraComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_HideMeshComponentsWhenDocked, TEXT("Category"), TEXT("Hydra Properties"));
				MetaData->SetValue(NewProp_HideMeshComponentsWhenDocked, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_HideMeshComponentsWhenDocked, TEXT("ToolTip"), TEXT("Requires SetMeshComponentLinks to be called prior (e.g. in BeginPlay), then if true these will auto-hide when docked"));
				MetaData->SetValue(NewProp_ControllerMoved, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_ControllerMoved, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_JoystickMoved, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_JoystickMoved, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_ButtonReleased, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_ButtonReleased, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_ButtonPressed, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_ButtonPressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_ControllerUndocked, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_ControllerUndocked, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_ControllerDocked, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_ControllerDocked, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_Unplugged, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_Unplugged, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_PluggedIn, TEXT("Category"), TEXT("Hydra Events"));
				MetaData->SetValue(NewProp_PluggedIn, TEXT("ModuleRelativePath"), TEXT("Public/HydraComponent.h"));
				MetaData->SetValue(NewProp_PluggedIn, TEXT("ToolTip"), TEXT("Assignable Events, used for fine-grained control\nButtons are relegated to input mapping, non-button features are available here"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UHydraPluginComponent(Z_Construct_UClass_UHydraPluginComponent, &UHydraPluginComponent::StaticClass, TEXT("UHydraPluginComponent"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UHydraPluginComponent);
	UFunction* Z_Construct_UFunction_UHydraSingleController_isLeftHand()
	{
		struct HydraSingleController_eventisLeftHand_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHydraSingleController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("isLeftHand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraSingleController_eventisLeftHand_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HydraSingleController_eventisLeftHand_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HydraSingleController_eventisLeftHand_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HydraSingleController_eventisLeftHand_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Hydra Frame"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convenience Call, optionally check hand possession property"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UHydraSingleController_isRightHand()
	{
		struct HydraSingleController_eventisRightHand_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UHydraSingleController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("isRightHand"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(HydraSingleController_eventisRightHand_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, HydraSingleController_eventisRightHand_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, HydraSingleController_eventisRightHand_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, HydraSingleController_eventisRightHand_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Hydra Frame"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Convenience Call, optionally check hand possession property"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UHydraSingleController_NoRegister()
	{
		return UHydraSingleController::StaticClass();
	}
	UClass* Z_Construct_UClass_UHydraSingleController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_HydraPlugin();
			OuterClass = UHydraSingleController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UHydraSingleController_isLeftHand());
				OuterClass->LinkChild(Z_Construct_UFunction_UHydraSingleController_isRightHand());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_handPossession = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("handPossession"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(handPossession, UHydraSingleController), 0x0010000000000015, Z_Construct_UEnum_HydraPlugin_EHydraControllerHand());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(docked, UHydraSingleController, bool);
				UProperty* NewProp_docked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("docked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(docked, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(docked, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(joystickClicked, UHydraSingleController, bool);
				UProperty* NewProp_joystickClicked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("joystickClicked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(joystickClicked, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(joystickClicked, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(triggerPressed, UHydraSingleController, bool);
				UProperty* NewProp_triggerPressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("triggerPressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(triggerPressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(triggerPressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bumperPressed, UHydraSingleController, bool);
				UProperty* NewProp_bumperPressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bumperPressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bumperPressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bumperPressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(startPressed, UHydraSingleController, bool);
				UProperty* NewProp_startPressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("startPressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(startPressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(startPressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(b4Pressed, UHydraSingleController, bool);
				UProperty* NewProp_b4Pressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("b4Pressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(b4Pressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(b4Pressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(b3Pressed, UHydraSingleController, bool);
				UProperty* NewProp_b3Pressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("b3Pressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(b3Pressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(b3Pressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(b2Pressed, UHydraSingleController, bool);
				UProperty* NewProp_b2Pressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("b2Pressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(b2Pressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(b2Pressed, UHydraSingleController), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(b1Pressed, UHydraSingleController, bool);
				UProperty* NewProp_b1Pressed = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("b1Pressed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(b1Pressed, UHydraSingleController), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(b1Pressed, UHydraSingleController), sizeof(bool), true);
				UProperty* NewProp_trigger = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("trigger"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(trigger, UHydraSingleController), 0x0010000000000015);
				UProperty* NewProp_joystick = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("joystick"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(joystick, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FVector2D());
				UProperty* NewProp_angularVelocity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("angularVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(angularVelocity, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_orientation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("orientation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(orientation, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FRotator());
				UProperty* NewProp_acceleration = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("acceleration"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(acceleration, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_velocity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("velocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(velocity, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_rawPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("rawPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(rawPosition, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_position = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(position, UHydraSingleController), 0x0010000000000015, Z_Construct_UScriptStruct_FVector());
				UProperty* NewProp_controllerId = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("controllerId"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(controllerId, UHydraSingleController), 0x0010000000000015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraSingleController_isLeftHand(), "isLeftHand"); // 2886315093
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UHydraSingleController_isRightHand(), "isRightHand"); // 3176331121
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("HydraSingleController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_handPossession, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_handPossession, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_docked, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_docked, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_joystickClicked, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_joystickClicked, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_triggerPressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_triggerPressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_bumperPressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_bumperPressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_startPressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_startPressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_b4Pressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_b4Pressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_b3Pressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_b3Pressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_b2Pressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_b2Pressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_b1Pressed, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_b1Pressed, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_trigger, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_trigger, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_joystick, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_joystick, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_angularVelocity, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_angularVelocity, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_orientation, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_orientation, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_acceleration, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_acceleration, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_velocity, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_velocity, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_rawPosition, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_rawPosition, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_position, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_position, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
				MetaData->SetValue(NewProp_controllerId, TEXT("Category"), TEXT("Hydra Frame"));
				MetaData->SetValue(NewProp_controllerId, TEXT("ModuleRelativePath"), TEXT("Public/HydraSingleController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UHydraSingleController(Z_Construct_UClass_UHydraSingleController, &UHydraSingleController::StaticClass, TEXT("UHydraSingleController"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UHydraSingleController);
	UPackage* Z_Construct_UPackage__Script_HydraPlugin()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/HydraPlugin")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x0FA147BF;
			Guid.B = 0x4D00B7F6;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_HydraPlugin_HydraPluggedInSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraUnPluggedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraDockedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraUnDockedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonPressedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraButtonReleasedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraJoystickMovedSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_HydraPlugin_HydraControllerMovedSignature__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
