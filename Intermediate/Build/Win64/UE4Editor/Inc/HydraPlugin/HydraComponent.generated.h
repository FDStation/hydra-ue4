// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
class UHydraSingleController;
struct FVector;
struct FRotator;
struct FVector2D;
class UMeshComponent;
#ifdef HYDRAPLUGIN_HydraComponent_generated_h
#error "HydraComponent.generated.h already included, missing '#pragma once' in HydraComponent.h"
#endif
#define HYDRAPLUGIN_HydraComponent_generated_h

#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_17_DELEGATE \
struct _Script_HydraPlugin_eventHydraControllerMovedSignature_Parms \
{ \
	UHydraSingleController* controller; \
	FVector position; \
	FVector velocity; \
	FVector acceleration; \
	FRotator orientation; \
	FRotator angularVelocity; \
}; \
static inline void FHydraControllerMovedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraControllerMovedSignature, UHydraSingleController* controller, FVector position, FVector velocity, FVector acceleration, FRotator orientation, FRotator angularVelocity) \
{ \
	_Script_HydraPlugin_eventHydraControllerMovedSignature_Parms Parms; \
	Parms.controller=controller; \
	Parms.position=position; \
	Parms.velocity=velocity; \
	Parms.acceleration=acceleration; \
	Parms.orientation=orientation; \
	Parms.angularVelocity=angularVelocity; \
	HydraControllerMovedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_16_DELEGATE \
struct _Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms \
{ \
	UHydraSingleController* controller; \
	FVector2D movement; \
}; \
static inline void FHydraJoystickMovedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraJoystickMovedSignature, UHydraSingleController* controller, FVector2D movement) \
{ \
	_Script_HydraPlugin_eventHydraJoystickMovedSignature_Parms Parms; \
	Parms.controller=controller; \
	Parms.movement=movement; \
	HydraJoystickMovedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_15_DELEGATE \
struct _Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms \
{ \
	UHydraSingleController* controller; \
	TEnumAsByte<EHydraControllerButton> button; \
}; \
static inline void FHydraButtonReleasedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraButtonReleasedSignature, UHydraSingleController* controller, EHydraControllerButton button) \
{ \
	_Script_HydraPlugin_eventHydraButtonReleasedSignature_Parms Parms; \
	Parms.controller=controller; \
	Parms.button=button; \
	HydraButtonReleasedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_14_DELEGATE \
struct _Script_HydraPlugin_eventHydraButtonPressedSignature_Parms \
{ \
	UHydraSingleController* controller; \
	TEnumAsByte<EHydraControllerButton> button; \
}; \
static inline void FHydraButtonPressedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraButtonPressedSignature, UHydraSingleController* controller, EHydraControllerButton button) \
{ \
	_Script_HydraPlugin_eventHydraButtonPressedSignature_Parms Parms; \
	Parms.controller=controller; \
	Parms.button=button; \
	HydraButtonPressedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_13_DELEGATE \
struct _Script_HydraPlugin_eventHydraUnDockedSignature_Parms \
{ \
	UHydraSingleController* controller; \
}; \
static inline void FHydraUnDockedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraUnDockedSignature, UHydraSingleController* controller) \
{ \
	_Script_HydraPlugin_eventHydraUnDockedSignature_Parms Parms; \
	Parms.controller=controller; \
	HydraUnDockedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_12_DELEGATE \
struct _Script_HydraPlugin_eventHydraDockedSignature_Parms \
{ \
	UHydraSingleController* controller; \
}; \
static inline void FHydraDockedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraDockedSignature, UHydraSingleController* controller) \
{ \
	_Script_HydraPlugin_eventHydraDockedSignature_Parms Parms; \
	Parms.controller=controller; \
	HydraDockedSignature.ProcessMulticastDelegate<UObject>(&Parms); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_11_DELEGATE \
static inline void FHydraUnPluggedSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraUnPluggedSignature) \
{ \
	HydraUnPluggedSignature.ProcessMulticastDelegate<UObject>(NULL); \
}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_10_DELEGATE \
static inline void FHydraPluggedInSignature_DelegateWrapper(const FMulticastScriptDelegate& HydraPluggedInSignature) \
{ \
	HydraPluggedInSignature.ProcessMulticastDelegate<UObject>(NULL); \
}




#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execCalibrate) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_OffsetFromShoulderMidPoint); \
		P_FINISH; \
		this->Calibrate(Z_Param_OffsetFromShoulderMidPoint); \
	} \
 \
	DECLARE_FUNCTION(execSetBaseOffset) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_Offset); \
		P_FINISH; \
		this->SetBaseOffset(Z_Param_Offset); \
	} \
 \
	DECLARE_FUNCTION(execGetLatestFrameForHand) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_hand); \
		P_FINISH; \
		*(UHydraSingleController**)Z_Param__Result=this->GetLatestFrameForHand(EHydraControllerHand(Z_Param_hand)); \
	} \
 \
	DECLARE_FUNCTION(execGetHistoricalFrameForHand) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_hand); \
		P_GET_PROPERTY(UIntProperty,Z_Param_historyIndex); \
		P_FINISH; \
		*(UHydraSingleController**)Z_Param__Result=this->GetHistoricalFrameForHand(EHydraControllerHand(Z_Param_hand),Z_Param_historyIndex); \
	} \
 \
	DECLARE_FUNCTION(execIsAvailable) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsAvailable(); \
	} \
 \
	DECLARE_FUNCTION(execSetMeshComponentLinks) \
	{ \
		P_GET_OBJECT(UMeshComponent,Z_Param_LeftMesh); \
		P_GET_OBJECT(UMeshComponent,Z_Param_RightMesh); \
		P_FINISH; \
		this->SetMeshComponentLinks(Z_Param_LeftMesh,Z_Param_RightMesh); \
	}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execCalibrate) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_OffsetFromShoulderMidPoint); \
		P_FINISH; \
		this->Calibrate(Z_Param_OffsetFromShoulderMidPoint); \
	} \
 \
	DECLARE_FUNCTION(execSetBaseOffset) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_Offset); \
		P_FINISH; \
		this->SetBaseOffset(Z_Param_Offset); \
	} \
 \
	DECLARE_FUNCTION(execGetLatestFrameForHand) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_hand); \
		P_FINISH; \
		*(UHydraSingleController**)Z_Param__Result=this->GetLatestFrameForHand(EHydraControllerHand(Z_Param_hand)); \
	} \
 \
	DECLARE_FUNCTION(execGetHistoricalFrameForHand) \
	{ \
		P_GET_PROPERTY(UByteProperty,Z_Param_hand); \
		P_GET_PROPERTY(UIntProperty,Z_Param_historyIndex); \
		P_FINISH; \
		*(UHydraSingleController**)Z_Param__Result=this->GetHistoricalFrameForHand(EHydraControllerHand(Z_Param_hand),Z_Param_historyIndex); \
	} \
 \
	DECLARE_FUNCTION(execIsAvailable) \
	{ \
		P_FINISH; \
		*(bool*)Z_Param__Result=this->IsAvailable(); \
	} \
 \
	DECLARE_FUNCTION(execSetMeshComponentLinks) \
	{ \
		P_GET_OBJECT(UMeshComponent,Z_Param_LeftMesh); \
		P_GET_OBJECT(UMeshComponent,Z_Param_RightMesh); \
		P_FINISH; \
		this->SetMeshComponentLinks(Z_Param_LeftMesh,Z_Param_RightMesh); \
	}


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUHydraPluginComponent(); \
	friend HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraPluginComponent(); \
	public: \
	DECLARE_CLASS(UHydraPluginComponent, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/HydraPlugin"), NO_API) \
	DECLARE_SERIALIZER(UHydraPluginComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_INCLASS \
	private: \
	static void StaticRegisterNativesUHydraPluginComponent(); \
	friend HYDRAPLUGIN_API class UClass* Z_Construct_UClass_UHydraPluginComponent(); \
	public: \
	DECLARE_CLASS(UHydraPluginComponent, UActorComponent, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/HydraPlugin"), NO_API) \
	DECLARE_SERIALIZER(UHydraPluginComponent) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UHydraPluginComponent(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UHydraPluginComponent) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UHydraPluginComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UHydraPluginComponent); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UHydraPluginComponent(const UHydraPluginComponent& InCopy); \
public:


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UHydraPluginComponent(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UHydraPluginComponent(const UHydraPluginComponent& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UHydraPluginComponent); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UHydraPluginComponent); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UHydraPluginComponent)


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_19_PROLOG
#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_RPC_WRAPPERS \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_INCLASS \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_RPC_WRAPPERS_NO_PURE_DECLS \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_INCLASS_NO_PURE_DECLS \
	HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h_22_ENHANCED_CONSTRUCTORS \
static_assert(false, "Unknown access specifier for GENERATED_BODY() macro in class HydraPluginComponent."); \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID HydraTest_Plugins_HydraPlugin_Source_HydraPlugin_Public_HydraComponent_h


PRAGMA_ENABLE_DEPRECATION_WARNINGS
